<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MpcNET</name>
    </assembly>
    <members>
        <member name="T:MpcNET.Commands.Database.FindCommand">
            <summary>
            Finds songs in the database that is exactly "searchText".
            https://www.musicpd.org/doc/protocol/database.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Database.FindCommand.#ctor(MpcNET.Tags.ITag,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Database.FindCommand"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="searchText">The search text.</param>
        </member>
        <member name="M:MpcNET.Commands.Database.FindCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Database.FindCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Database.ListAllCommand">
            <summary>
            Lists all songs and directories in URI.
            https://www.musicpd.org/doc/protocol/database.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Database.ListAllCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Database.ListAllCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Database.ListCommand">
            <summary>
            Lists the specified tag.
            https://www.musicpd.org/doc/protocol/database.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Database.ListCommand.#ctor(MpcNET.Tags.ITag)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Database.ListCommand"/> class.
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:MpcNET.Commands.Database.ListCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Database.ListCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Database.UpdateCommand">
            <summary>
            Updates the specified URI.
            https://www.musicpd.org/doc/protocol/database.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Database.UpdateCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Database.UpdateCommand"/> class.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Database.UpdateCommand.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Database.UpdateCommand"/> class.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:MpcNET.Commands.Database.UpdateCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Database.UpdateCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Output.DisableOutputCommand">
            <summary>
            Turns an output off.
            https://www.musicpd.org/doc/protocol/output_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Output.DisableOutputCommand.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Output.DisableOutputCommand"/> class.
            </summary>
            <param name="outputId">The output identifier.</param>
        </member>
        <member name="M:MpcNET.Commands.Output.DisableOutputCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Output.DisableOutputCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Output.EnableOutputCommand">
            <summary>
            Turns an output on.
            https://www.musicpd.org/doc/protocol/output_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Output.EnableOutputCommand.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Output.EnableOutputCommand"/> class.
            </summary>
            <param name="outputId">The output identifier.</param>
        </member>
        <member name="M:MpcNET.Commands.Output.EnableOutputCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Output.EnableOutputCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Output.OutputsCommand">
            <summary>
            Shows information about all outputs.
            https://www.musicpd.org/doc/protocol/output_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Output.OutputsCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Output.OutputsCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Output.ToggleOutputCommand">
            <summary>
            Turns an output on or off, depending on the current state.
            https://www.musicpd.org/doc/protocol/output_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Output.ToggleOutputCommand.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Output.ToggleOutputCommand"/> class.
            </summary>
            <param name="outputId">The output identifier.</param>
        </member>
        <member name="M:MpcNET.Commands.Output.ToggleOutputCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Output.ToggleOutputCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playback.NextCommand">
            <summary>
            Command to go to next song.
            https://www.musicpd.org/doc/protocol/playback_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playback.NextCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playback.NextCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playback.PlayCommand">
            <summary>
            Command to start playback.
            https://www.musicpd.org/doc/protocol/playback_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playback.PlayCommand.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Playback.PlayCommand" /> class.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:MpcNET.Commands.Playback.PlayCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playback.PlayCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playback.PlayIdCommand">
            <summary>
            Command to start playback.
            https://www.musicpd.org/doc/protocol/playback_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playback.PlayIdCommand.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Playback.PlayIdCommand"/> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:MpcNET.Commands.Playback.PlayIdCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playback.PlayIdCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playback.PlayPauseCommand">
            <summary>
            Command to play or pause.
            https://www.musicpd.org/doc/protocol/playback_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playback.PlayPauseCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playback.PlayPauseCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playback.PreviousCommand">
            <summary>
            Command to goto previous song.
            https://www.musicpd.org/doc/protocol/playback_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playback.PreviousCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playback.PreviousCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playback.SetVolumeCommand">
            <summary>
            Command to set volume.
            https://www.musicpd.org/doc/protocol/playback_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playback.SetVolumeCommand.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Playback.SetVolumeCommand"/> class.
            </summary>
            <param name="volume">The volume.</param>
        </member>
        <member name="M:MpcNET.Commands.Playback.SetVolumeCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playback.SetVolumeCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playback.StopCommand">
            <summary>
            Command to stop playback.
            https://www.musicpd.org/doc/protocol/playback_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playback.StopCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playback.StopCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playlist.AddCommand">
            <summary>
            Adds the file URI to the playlist (directories add recursively). URI can also be a single file.
            https://www.musicpd.org/doc/protocol/queue.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playlist.AddCommand.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Playlist.AddCommand"/> class.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:MpcNET.Commands.Playlist.AddCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playlist.AddCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playlist.AddIdCommand">
            <summary>
            Adds a song to the playlist (non-recursive) and returns the song id.
            https://www.musicpd.org/doc/protocol/queue.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playlist.AddIdCommand.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Playlist.AddIdCommand"/> class.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:MpcNET.Commands.Playlist.AddIdCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playlist.AddIdCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playlist.ClearCommand">
            <summary>
            Clears the current playlist.
            https://www.musicpd.org/doc/protocol/queue.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playlist.ClearCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playlist.ClearCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playlist.DeleteCommand">
            <summary>
            Deletes a song from the playlist.
            https://www.musicpd.org/doc/protocol/queue.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playlist.DeleteCommand.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Playlist.DeleteCommand"/> class.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:MpcNET.Commands.Playlist.DeleteCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playlist.DeleteCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playlist.DeleteIdCommand">
            <summary>
            Deletes the song SONGID from the playlist.
            https://www.musicpd.org/doc/protocol/queue.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playlist.DeleteIdCommand.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Playlist.DeleteIdCommand"/> class.
            </summary>
            <param name="songId">The song identifier.</param>
        </member>
        <member name="M:MpcNET.Commands.Playlist.DeleteIdCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playlist.DeleteIdCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playlist.ListPlaylistCommand">
            <summary>
            Lists the songs in the playlist.
            https://www.musicpd.org/doc/protocol/playlist_files.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playlist.ListPlaylistCommand.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Playlist.ListPlaylistCommand"/> class.
            </summary>
            <param name="playlistName">Name of the playlist.</param>
        </member>
        <member name="M:MpcNET.Commands.Playlist.ListPlaylistCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playlist.ListPlaylistCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playlist.ListPlaylistInfoCommand">
            <summary>
            Lists the songs with metadata in the playlist.
            https://www.musicpd.org/doc/protocol/playlist_files.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playlist.ListPlaylistInfoCommand.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Playlist.ListPlaylistInfoCommand"/> class.
            </summary>
            <param name="playlistName">Name of the playlist.</param>
        </member>
        <member name="M:MpcNET.Commands.Playlist.ListPlaylistInfoCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playlist.ListPlaylistInfoCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playlist.ListPlaylistsCommand">
            <summary>
            Prints a list of the playlist directory.
            https://www.musicpd.org/doc/protocol/playlist_files.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playlist.ListPlaylistsCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playlist.ListPlaylistsCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playlist.LoadCommand">
            <summary>
            Loads the playlist into the current queue.
            https://www.musicpd.org/doc/protocol/playlist_files.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playlist.LoadCommand.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Playlist.LoadCommand"/> class.
            </summary>
            <param name="playlistName">Name of the playlist.</param>
        </member>
        <member name="M:MpcNET.Commands.Playlist.LoadCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playlist.LoadCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playlist.PlaylistCommand">
            <summary>
            Displays the current playlist.
            https://www.musicpd.org/doc/protocol/queue.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playlist.PlaylistCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playlist.PlaylistCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playlist.PlaylistIdCommand">
            <summary>
            Displays song ID in the playlist.
            https://www.musicpd.org/doc/protocol/queue.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playlist.PlaylistIdCommand.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Playlist.PlaylistIdCommand"/> class.
            </summary>
            <param name="songId">The song identifier.</param>
        </member>
        <member name="M:MpcNET.Commands.Playlist.PlaylistIdCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playlist.PlaylistIdCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Playlist.PlaylistInfoCommand">
            <summary>
            Displays a list of all songs in the playlist.
            https://www.musicpd.org/doc/protocol/queue.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Playlist.PlaylistInfoCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Playlist.PlaylistInfoCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Reflection.CommandsCommand">
            <summary>
            Shows which commands the current user has access to.
            config : This command is only permitted to "local" clients (connected via UNIX domain socket).
            https://www.musicpd.org/doc/protocol/reflection_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Reflection.CommandsCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Reflection.CommandsCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Reflection.DecodersCommand">
            <summary>
            Print a list of decoder plugins, followed by their supported suffixes and MIME types.
            https://www.musicpd.org/doc/protocol/reflection_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Reflection.DecodersCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Reflection.DecodersCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Reflection.TagTypesCommand">
            <summary>
            Shows a list of available song metadata.
            https://www.musicpd.org/doc/protocol/reflection_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Reflection.TagTypesCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Reflection.TagTypesCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Reflection.UrlHandlersCommand">
            <summary>
            Gets a list of available URL handlers.
            https://www.musicpd.org/doc/protocol/reflection_commands.html.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Reflection.UrlHandlersCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Reflection.UrlHandlersCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Status.CurrentSongCommand">
            <summary>
            Gets the current song.
            https://www.musicpd.org/doc/protocol/command_reference.html#status_commands.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Status.CurrentSongCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Status.CurrentSongCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Status.IdleCommand">
            <summary>
            Idles mpd until something happens.
            https://www.musicpd.org/doc/protocol/command_reference.html#status_commands.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Status.IdleCommand.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Commands.Status.IdleCommand"/> class.
            </summary>
            <param name="subSystem">The sub system.</param>
        </member>
        <member name="M:MpcNET.Commands.Status.IdleCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Status.IdleCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Status.NoIdleCommand">
            <summary>
            Cancels idle command.
            https://www.musicpd.org/doc/protocol/command_reference.html#status_commands.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Status.NoIdleCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Status.NoIdleCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Commands.Status.StatusCommand">
            <summary>
            Gets the status.
            https://www.musicpd.org/doc/protocol/command_reference.html#status_commands.
            </summary>
        </member>
        <member name="M:MpcNET.Commands.Status.StatusCommand.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>
            The serialize command.
            </returns>
        </member>
        <member name="M:MpcNET.Commands.Status.StatusCommand.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>
            The deserialized response.
            </returns>
        </member>
        <member name="T:MpcNET.Exceptions.CommandNullException">
            <summary>
            Thrown by <see cref="T:MpcNET.MpcConnection"/> when the command is null.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:MpcNET.Exceptions.EmptyResponseException">
            <summary>
            Exception throw when an empty response is received.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:MpcNET.Exceptions.EmptyResponseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Exceptions.EmptyResponseException"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="T:MpcNET.Exceptions.MpcConnectException">
            <summary>
            Exception thrown when there are problems with the <see cref="T:MpcNET.MpcConnection"/>.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:MpcNET.Exceptions.MpcConnectException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Exceptions.MpcConnectException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:MpcNET.Exceptions.MpcException">
            <summary>
            Base class for all exceptions.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:MpcNET.Exceptions.MpcException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Exceptions.MpcException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:MpcNET.IMpcCommand`1">
            <summary>
            Interface for implementing a MPD command.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:MpcNET.IMpcCommand`1.Serialize">
            <summary>
            Serializes the command.
            </summary>
            <returns>The serialize command.</returns>
        </member>
        <member name="M:MpcNET.IMpcCommand`1.Deserialize(System.Collections.Generic.IReadOnlyList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Deserializes the specified response text pairs.
            </summary>
            <param name="response">The response.</param>
            <returns>The deserialized response.</returns>
        </member>
        <member name="T:MpcNET.IMpcConnection">
            <summary>
            Interface for implementing an MPD connection.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:MpcNET.IMpcConnection.Version">
            <summary>
            Gets the version.
            </summary>
        </member>
        <member name="M:MpcNET.IMpcConnection.ConnectAsync">
            <summary>
            Connects asynchronously.
            </summary>
            <returns>The connect task.</returns>
        </member>
        <member name="M:MpcNET.IMpcConnection.DisconnectAsync">
            <summary>
            Disconnects asynchronously.
            </summary>
            <returns>The disconnect task.</returns>
        </member>
        <member name="M:MpcNET.IMpcConnection.SendAsync``1(MpcNET.IMpcCommand{``0})">
            <summary>
            Sends the command asynchronously.
            </summary>
            <typeparam name="TResponse">The response type.</typeparam>
            <param name="mpcCommand">The command selector.</param>
            <returns>
            The send task.
            </returns>
        </member>
        <member name="T:MpcNET.IMpcConnectionReporter">
            <summary>
            Interface for implementing an observer for <see cref="T:MpcNET.MpcConnection"/>.
            </summary>
        </member>
        <member name="M:MpcNET.IMpcConnectionReporter.Connecting(System.Boolean,System.Int32)">
            <summary>
            Called when connecting.
            </summary>
            <param name="isReconnect">if set to <c>true</c> [is reconnect].</param>
            <param name="connectAttempt">The connect attempt.</param>
        </member>
        <member name="M:MpcNET.IMpcConnectionReporter.ConnectionAccepted(System.Boolean,System.Int32)">
            <summary>
            Called when connection is accepted.
            </summary>
            <param name="isReconnect">if set to <c>true</c> [is reconnect].</param>
            <param name="connectAttempt">The connect attempt.</param>
        </member>
        <member name="M:MpcNET.IMpcConnectionReporter.Connected(System.Boolean,System.Int32,System.String)">
            <summary>
            Called when connected.
            </summary>
            <param name="isReconnect">if set to <c>true</c> [is reconnect].</param>
            <param name="connectAttempt">The connect attempt.</param>
            <param name="connectionInfo">The connection information.</param>
        </member>
        <member name="M:MpcNET.IMpcConnectionReporter.Sending(System.String)">
            <summary>
            Called when sending command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:MpcNET.IMpcConnectionReporter.SendException(System.String,System.Int32,System.Exception)">
            <summary>
            Called when send exception occured.
            </summary>
            <param name="commandText">The command text.</param>
            <param name="sendAttempt">The send attempt.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:MpcNET.IMpcConnectionReporter.RetrySend(System.String,System.Int32)">
            <summary>
            Called when send is retried.
            </summary>
            <param name="command">The command.</param>
            <param name="sendAttempt">The send attempt.</param>
        </member>
        <member name="M:MpcNET.IMpcConnectionReporter.ReadResponse(System.String)">
            <summary>
            Called when response is read.
            </summary>
            <param name="responseLine">The response line.</param>
        </member>
        <member name="M:MpcNET.IMpcConnectionReporter.Disconnecting(System.Boolean)">
            <summary>
            Called when disconnecting.
            </summary>
            <param name="isExplicitDisconnect">if set to <c>true</c> the disconnect was explicitly called.</param>
        </member>
        <member name="M:MpcNET.IMpcConnectionReporter.Disconnected(System.Boolean)">
            <summary>
            Called when disconnected.
            </summary>
            <param name="isExplicitDisconnect">if set to <c>true</c> the disconnect was explicitly called.</param>
        </member>
        <member name="T:MpcNET.Message.ErrorMpdResponse`1">
            <summary>
            Implementation of <see cref="T:MpcNET.Message.IMpdResponse`1"/> in case of an error.
            </summary>
            <typeparam name="TContent">The content type.</typeparam>
            <seealso cref="T:MpcNET.Message.IMpdResponse`1" />
        </member>
        <member name="M:MpcNET.Message.ErrorMpdResponse`1.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Message.ErrorMpdResponse`1"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:MpcNET.Message.ErrorMpdResponse`1.Result">
            <summary>
            Gets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:MpcNET.Message.ErrorMpdResponse`1.Content">
            <summary>
            Gets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="T:MpcNET.Message.IMpdMessage`1">
            <summary>
            Interface for implementing MPD message.
            </summary>
            <typeparam name="TContent">The type of the content.</typeparam>
        </member>
        <member name="P:MpcNET.Message.IMpdMessage`1.Request">
            <summary>
            Gets the request.
            </summary>
            <value>
            The request.
            </value>
        </member>
        <member name="P:MpcNET.Message.IMpdMessage`1.Response">
            <summary>
            Gets the response.
            </summary>
            <value>
            The response.
            </value>
        </member>
        <member name="P:MpcNET.Message.IMpdMessage`1.IsResponseValid">
            <summary>
            Gets a value indicating whether this instance is response valid.
            </summary>
            <value>
            <c>true</c> if this instance is response valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MpcNET.Message.IMpdRequest`1">
            <summary>
            Interface for implementing a MPD request.
            </summary>
            <typeparam name="TContent">The response content.</typeparam>
        </member>
        <member name="P:MpcNET.Message.IMpdRequest`1.Command">
            <summary>
            Gets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="T:MpcNET.Message.IMpdResponse`1">
            <summary>
            Represents response to a <see cref="T:MpcNET.IMpcCommand`1"/>.
            </summary>
            <typeparam name="TContent">The type of the content.</typeparam>
        </member>
        <member name="P:MpcNET.Message.IMpdResponse`1.Result">
            <summary>
            Gets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:MpcNET.Message.IMpdResponse`1.Content">
            <summary>
            Gets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="T:MpcNET.Message.IMpdResponseResult">
            <summary>
            Interface for implementing a MPD response result.
            </summary>
        </member>
        <member name="P:MpcNET.Message.IMpdResponseResult.Status">
            <summary>
            Gets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:MpcNET.Message.IMpdResponseResult.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
            <value>
            The error message.
            </value>
        </member>
        <member name="P:MpcNET.Message.IMpdResponseResult.MpdError">
            <summary>
            Gets the MPD error.
            </summary>
            <value>
            The MPD error.
            </value>
        </member>
        <member name="P:MpcNET.Message.IMpdResponseResult.Error">
            <summary>
            Gets a value indicating whether an error occured.
            </summary>
            <value>
              <c>true</c> if error; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MpcNET.Message.IMpdResponseResult.Connected">
            <summary>
            Gets a value indicating whether this <see cref="T:MpcNET.Message.IMpdResponseResult"/> is connected.
            </summary>
            <value>
              <c>true</c> if connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MpcNET.Message.MpdRequest`1">
            <summary>
            MPD request containing the command.
            </summary>
            <typeparam name="TContent">The content of the reponse.</typeparam>
            <seealso cref="T:MpcNET.Message.IMpdRequest`1" />
        </member>
        <member name="M:MpcNET.Message.MpdRequest`1.#ctor(MpcNET.IMpcCommand{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Message.MpdRequest`1"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:MpcNET.Message.MpdRequest`1.Command">
            <summary>
            Gets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="T:MpcNET.Message.MpdResponse`1">
            <summary>
            Represents a response to a <see cref="T:MpcNET.IMpcCommand`1"/>.
            </summary>
            <typeparam name="TContent">The content type.</typeparam>
            <seealso cref="T:MpcNET.Message.IMpdResponse`1" />
        </member>
        <member name="M:MpcNET.Message.MpdResponse`1.#ctor(System.String,`0,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Message.MpdResponse`1"/> class.
            </summary>
            <param name="endLine">The end line.</param>
            <param name="content">The content.</param>
            <param name="connected">if set to <c>true</c> [connected].</param>
        </member>
        <member name="P:MpcNET.Message.MpdResponse`1.Result">
            <summary>
            Gets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:MpcNET.Message.MpdResponse`1.Content">
            <summary>
            Gets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="T:MpcNET.MpcConnection">
            <summary>
            Keeps the connection to the MPD server and handels the most basic structure of the MPD protocol.
            class.
            </summary>
        </member>
        <member name="M:MpcNET.MpcConnection.#ctor(System.Net.IPEndPoint,MpcNET.IMpcConnectionReporter)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.MpcConnection" /> class.
            </summary>
            <param name="server">The server.</param>
            <param name="mpcConnectionReporter">The MPC connection logger.</param>
        </member>
        <member name="P:MpcNET.MpcConnection.Version">
            <summary>
            Gets the version.
            </summary>
        </member>
        <member name="M:MpcNET.MpcConnection.ConnectAsync">
            <summary>
            Connects asynchronously.
            </summary>
            <returns>The connect task.</returns>
        </member>
        <member name="M:MpcNET.MpcConnection.DisconnectAsync">
            <summary>
            Disconnects asynchronously.
            </summary>
            <returns>The disconnect task.</returns>
        </member>
        <member name="M:MpcNET.MpcConnection.SendAsync``1(MpcNET.IMpcCommand{``0})">
            <summary>
            Sends the command asynchronously.
            </summary>
            <typeparam name="TResponse">The response type.</typeparam>
            <param name="mpcCommand">The MPC command.</param>
            <returns>
            The send task.
            </returns>
        </member>
        <member name="M:MpcNET.MpcConnection.System#IDisposable#Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:MpcNET.MpdDirectoryListing">
            <summary>
            The MpdDirectoryListing class contains the response of a MPD server to a list command.
            </summary>
        </member>
        <member name="M:MpcNET.MpdDirectoryListing.#ctor(System.Collections.Generic.List{MpcNET.Types.IMpdFile},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.MpdDirectoryListing" /> class.
            </summary>
            <param name="file">The file.</param>
            <param name="directory">The directory.</param>
            <param name="playlist">The playlist.</param>
        </member>
        <member name="P:MpcNET.MpdDirectoryListing.FileListList">
            <summary>
            Gets the list of files in the directory.
            </summary>
        </member>
        <member name="P:MpcNET.MpdDirectoryListing.DirectoryList">
            <summary>
            Gets the list of subdirectories in the directory.
            </summary>
        </member>
        <member name="P:MpcNET.MpdDirectoryListing.PlaylistList">
            <summary>
            Gets the list of playlists in the directory.
            </summary>
        </member>
        <member name="T:MpcNET.MpdState">
            <summary>
            The possible states of the MPD.
            </summary>
        </member>
        <member name="F:MpcNET.MpdState.Unknown">
            <summary>
            The state of the MPD could not be translated into this enumeration.
            </summary>
        </member>
        <member name="F:MpcNET.MpdState.Play">
            <summary>
            The MPD is playing a track.
            </summary>
        </member>
        <member name="F:MpcNET.MpdState.Stop">
            <summary>
            The MPD is not playing a track.
            </summary>
        </member>
        <member name="F:MpcNET.MpdState.Pause">
            <summary>
            The playback of the MPD is currently paused.
            </summary>
        </member>
        <member name="T:MpcNET.MpdStatistics">
            <summary>
            The MpdStatistics class contains statistics of the MPD file database.
            </summary>
        </member>
        <member name="M:MpcNET.MpdStatistics.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.MpdStatistics"/> class.
            </summary>
            <param name="artists">The number of artists in the MPD database.</param>
            <param name="albums">The number of albums in the MPD database.</param>
            <param name="songs">The number of songs in the MPD database.</param>
            <param name="uptime">The time the MPD server is running in seconds.</param>
            <param name="playtime">The number of seconds the MPD played so far.</param>
            <param name="dbPlaytime">The total playtime of all songs in the MPD database.</param>
            <param name="dbUpdate">The timestamp of the last MPD database update.</param>
        </member>
        <member name="P:MpcNET.MpdStatistics.Artists">
            <summary>
            Gets the number of artists in the MPD database.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatistics.Albums">
            <summary>
            Gets the number of albums in the MPD database.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatistics.Songs">
            <summary>
            Gets the number of songs in the MPD database.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatistics.Uptime">
            <summary>
            Gets the time the MPD server is running in seconds.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatistics.Playtime">
            <summary>
            Gets the number of seconds the MPD played so far.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatistics.DbPlaytime">
            <summary>
            Gets the total playtime of all songs in the MPD database.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatistics.DbUpdate">
            <summary>
            Gets the timestamp of the last MPD database update.
            </summary>
        </member>
        <member name="M:MpcNET.MpdStatistics.ToString">
            <summary>
            Returns a string representation of the object mainly for debugging purpuse.
            </summary>
            <returns>A string representation of the object.</returns>
        </member>
        <member name="T:MpcNET.MpdStatus">
            <summary>
            The MpdStatus class contains all values describing the current status of the MPD.
            </summary>
        </member>
        <member name="M:MpcNET.MpdStatus.#ctor(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,MpcNET.MpdState,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan,System.TimeSpan,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.MpdStatus" /> class.
            </summary>
            <param name="volume">The volume.</param>
            <param name="repeat">if set to <c>true</c> [repeat].</param>
            <param name="random">if set to <c>true</c> [random].</param>
            <param name="consume">if set to <c>true</c> [consume].</param>
            <param name="single">if set to <c>true</c> [single].</param>
            <param name="playlist">The playlist.</param>
            <param name="playlistLength">Length of the playlist.</param>
            <param name="xFade">The x fade.</param>
            <param name="state">The state.</param>
            <param name="song">The song.</param>
            <param name="songId">The song identifier.</param>
            <param name="nextSong">The next song.</param>
            <param name="nextSongId">The next song identifier.</param>
            <param name="elapsed">The elapsed.</param>
            <param name="duration">The duration.</param>
            <param name="bitrate">The bitrate.</param>
            <param name="audioSampleRate">The audio sample rate.</param>
            <param name="audioBits">The audio bits.</param>
            <param name="audioChannels">The audio channels.</param>
            <param name="updatingDb">The updating database.</param>
            <param name="error">The error.</param>
        </member>
        <member name="P:MpcNET.MpdStatus.Volume">
            <summary>
            Gets the current volume of the output.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.Repeat">
            <summary>
            Gets a value indicating whether the playlist is repeated after finish.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.Random">
            <summary>
            Gets a value indicating whether the playlist is played in random order.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.Consume">
            <summary>
            Gets a value indicating whether the playlist is consumed.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.Single">
            <summary>
            Gets a value indicating whether the playlist only plays a song once when random is enabled.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.Playlist">
            <summary>
            Gets the version number of the playlist.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.PlaylistLength">
            <summary>
            Gets the length of the playlist.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.XFade">
            <summary>
            Gets the number of seconds crossfaded between song changes.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.State">
            <summary>
            Gets the state of the MPD.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.Song">
            <summary>
            Gets the index of the currently played song in the playlist.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.SongId">
            <summary>
            Gets the id of the song currently played.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.NextSong">
            <summary>
            Gets the next song.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.NextSongId">
            <summary>
            Gets the next song identifier.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.Elapsed">
            <summary>
            Gets the number of seconds already played of the current song.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.Duration">
            <summary>
            Gets the length of the current song in seconds.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.Bitrate">
            <summary>
            Gets the bitrate of the current song.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.AudioSampleRate">
            <summary>
            Gets the audio sample rate of the current song.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.AudioBits">
            <summary>
            Gets the audio bits of the current song.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.AudioChannels">
            <summary>
            Gets the number of audio channels of the current song.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.UpdatingDb">
            <summary>
            Gets the number of the update on the MPD database currently running.
            </summary>
        </member>
        <member name="P:MpcNET.MpdStatus.Error">
            <summary>
            Gets the error message, if there is an error.
            </summary>
        </member>
        <member name="M:MpcNET.MpdStatus.ToString">
            <summary>
            Returns a string representation of the object maily for debugging purpuses.
            </summary>
            <returns>A string representation of the object.</returns>
        </member>
        <member name="T:MpcNET.Tags.FindTags">
            <summary>
            https://www.musicpd.org/doc/protocol/database.html : find {TYPE} {WHAT} [...] [window START:END].
            </summary>
        </member>
        <member name="P:MpcNET.Tags.FindTags.Any">
            <summary>
            Gets the any tag.
            </summary>
            <value>
            Any.
            </value>
        </member>
        <member name="P:MpcNET.Tags.FindTags.File">
            <summary>
            Gets the file tag.
            </summary>
            <value>
            The file.
            </value>
        </member>
        <member name="P:MpcNET.Tags.FindTags.Base">
            <summary>
            Gets the base tag.
            </summary>
            <value>
            The base.
            </value>
        </member>
        <member name="P:MpcNET.Tags.FindTags.ModifiedSince">
            <summary>
            Gets the modified since tag.
            </summary>
            <value>
            The modified since.
            </value>
        </member>
        <member name="T:MpcNET.Tags.ITag">
            <summary>
            Interface for representing a tag.
            </summary>
        </member>
        <member name="P:MpcNET.Tags.ITag.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:MpcNET.Tags.MpdTags">
            <summary>
            https://www.musicpd.org/doc/protocol/tags.html.
            </summary>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.Artist">
            <summary>
            Gets the artist.
            </summary>
            <value>
            The artist.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.ArtistSort">
            <summary>
            Gets the artist sort.
            </summary>
            <value>
            The artist sort.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.Album">
            <summary>
            Gets the album.
            </summary>
            <value>
            The album.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.AlbumSort">
            <summary>
            Gets the album sort.
            </summary>
            <value>
            The album sort.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.AlbumArtist">
            <summary>
            Gets the album artist.
            </summary>
            <value>
            The album artist.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.AlbumArtistSort">
            <summary>
            Gets the album artist sort.
            </summary>
            <value>
            The album artist sort.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.Track">
            <summary>
            Gets the track.
            </summary>
            <value>
            The track.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.Genre">
            <summary>
            Gets the genre.
            </summary>
            <value>
            The genre.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.Date">
            <summary>
            Gets the date.
            </summary>
            <value>
            The date.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.Composer">
            <summary>
            Gets the composer.
            </summary>
            <value>
            The composer.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.Performer">
            <summary>
            Gets the performer.
            </summary>
            <value>
            The performer.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.Comment">
            <summary>
            Gets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="P:MpcNET.Tags.MpdTags.Disc">
            <summary>
            Gets the disc.
            </summary>
            <value>
            The disc.
            </value>
        </member>
        <member name="T:MpcNET.Types.IMpdFile">
            <summary>
            Interface for representing MPD files.
            </summary>
            <seealso cref="T:MpcNET.Types.IMpdFilePath" />
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Time">
            <summary>
            Gets the time.
            </summary>
            <value>
            The time.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Album">
            <summary>
            Gets the album.
            </summary>
            <value>
            The album.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Artist">
            <summary>
            Gets the artist.
            </summary>
            <value>
            The artist.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Track">
            <summary>
            Gets the track.
            </summary>
            <value>
            The track.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Genre">
            <summary>
            Gets the genre.
            </summary>
            <value>
            The genre.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Date">
            <summary>
            Gets the date.
            </summary>
            <value>
            The date.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Composer">
            <summary>
            Gets the composer.
            </summary>
            <value>
            The composer.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Performer">
            <summary>
            Gets the performer.
            </summary>
            <value>
            The performer.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Comment">
            <summary>
            Gets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Disc">
            <summary>
            Gets the disc.
            </summary>
            <value>
            The disc.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Position">
            <summary>
            Gets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.UnknownMetadata">
            <summary>
            Gets the unknown metadata.
            </summary>
            <value>
            The unknown metadata.
            </value>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasTime">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Time"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasAlbum">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Album"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasArtist">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Artist"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasTitle">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Title"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasTrack">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Track"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasName">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Name"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasGenre">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Genre"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasDate">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Date"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasComposer">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Composer"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasPerformer">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Performer"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasComment">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Comment"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasDisc">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Disc"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasPos">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Position"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFile.HasId">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.IMpdFile.Id"/> property set.
            </summary>
        </member>
        <member name="T:MpcNET.Types.IMpdFilePath">
            <summary>
            Interface for representing a MPD file path.
            </summary>
        </member>
        <member name="P:MpcNET.Types.IMpdFilePath.Path">
            <summary>
            Gets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="T:MpcNET.Types.MpdDecoderPlugin">
            <summary>
            Represents a MPD decoder plugin.
            </summary>
        </member>
        <member name="F:MpcNET.Types.MpdDecoderPlugin.Empty">
            <summary>
            The empty plugiun.
            </summary>
        </member>
        <member name="M:MpcNET.Types.MpdDecoderPlugin.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Types.MpdDecoderPlugin"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:MpcNET.Types.MpdDecoderPlugin.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:MpcNET.Types.MpdDecoderPlugin.Suffixes">
            <summary>
            Gets the suffixes.
            </summary>
            <value>
            The suffixes.
            </value>
        </member>
        <member name="P:MpcNET.Types.MpdDecoderPlugin.MediaTypes">
            <summary>
            Gets the media types.
            </summary>
            <value>
            The media types.
            </value>
        </member>
        <member name="T:MpcNET.Types.MpdDirectory">
            <summary>
            Represents a MPD directory.
            </summary>
        </member>
        <member name="M:MpcNET.Types.MpdDirectory.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Types.MpdDirectory"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="P:MpcNET.Types.MpdDirectory.Path">
            <summary>
            Gets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:MpcNET.Types.MpdDirectory.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:MpcNET.Types.MpdDirectory.Files">
            <summary>
            Gets the files.
            </summary>
            <value>
            The files.
            </value>
        </member>
        <member name="T:MpcNET.Types.MpdFile">
            <summary>
            The MpdFile class contains all meta data for a file of the MPD.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasTime">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Time"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasAlbum">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Album"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasArtist">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Artist"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasTitle">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Title"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasTrack">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Track"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasName">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Name"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasGenre">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Genre"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasDate">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Date"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasComposer">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Composer"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasPerformer">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Performer"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasComment">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Comment"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasDisc">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Disc"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasPos">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Position"/> property set.
            </summary>
        </member>
        <member name="P:MpcNET.Types.MpdFile.HasId">
            <summary>
            Gets a value indicating whether the MpdFile has the <see cref="P:MpcNET.Types.MpdFile.Id"/> property set.
            </summary>
        </member>
        <member name="T:MpcNET.Types.MpdOutput">
            <summary>
            Represents a MPD output.
            </summary>
        </member>
        <member name="M:MpcNET.Types.MpdOutput.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Types.MpdOutput"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="name">The name.</param>
            <param name="enabled">if set to <c>true</c> [enabled].</param>
        </member>
        <member name="P:MpcNET.Types.MpdOutput.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:MpcNET.Types.MpdOutput.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:MpcNET.Types.MpdOutput.IsEnabled">
            <summary>
            Gets a value indicating whether this instance is enabled.
            </summary>
            <value>
            <c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MpcNET.Types.MpdPlaylist">
            <summary>
            Represents a MPD playlist.
            </summary>
        </member>
        <member name="M:MpcNET.Types.MpdPlaylist.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MpcNET.Types.MpdPlaylist"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:MpcNET.Types.MpdPlaylist.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:MpcNET.Types.MpdPlaylist.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>
            The last modified.
            </value>
        </member>
    </members>
</doc>
